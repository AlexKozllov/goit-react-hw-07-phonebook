{"version":3,"sources":["components/contactForm/contactForm.module.css","components/animation/shiftAlert.module.css","components/contactList/contactList.module.css","components/app.module.css","components/alert/alert.module.css","components/animation/shiftAnimation.module.css","components/filter/filter.module.css","components/animation/scaleAnimation.module.css","components/animation/shiftAppear.module.css","components/loader/Loader.module.css","components/loader/ModalLoader.module.css","servises/fatchToDB.js","redux/actions/phBookActions.js","redux/contactsSelectors.js","components/alert/Alert.js","components/contactForm/ContactForm.js","redux/operations/phBookOperations.js","components/filter/Filter.js","components/contactList/ContactList.js","components/loader/Loader.js","components/loader/ModalLoader.js","components/App.js","redux/redusers/phBookRedusers.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","postContacts","contacts","a","post","then","data","console","log","error","getContacts","get","removeContact","id","delete","addContactRequest","createAction","addContactSuccess","addContactError","getContactsRequest","getContactsSuccess","getContactsError","removeContactRequest","removeContactSuccess","removeContactError","setFilter","getLoading","state","loading","getFilter","filter","getListContacts","items","getVisibleContacts","createSelector","listContacts","filterValue","contact","name","toLocaleLowerCase","includes","Alert","text","className","s","box","InitialState","number","validateForm","isExistContact","ContactForm","handleInput","e","target","value","setState","handleSubmit","preventDefault","addContact","props","onCheckUnique","find","item","toLowerCase","this","CSSTransition","in","classNames","shiftAlert","timeout","unmountOnExit","contactForm","onSubmit","type","onChange","addBtn","Component","mapDispatchToProps","dispatch","catch","connect","ownProps","findField","removeContactFromList","visibleContacts","length","scaleAnimation","TransitionGroup","component","map","shiftAnimation","listItem","itemName","onClick","Loader","Styles","loader","color","height","width","ModalLoader","modalLoader","isLoading","useDispatch","useEffect","wrapper","appear","shiftAppear","headerPhoneboo","createReducer","action","payload","contactsReusers","combineReducers","rootReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30d1b0c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__1tmzf\",\"addBtn\":\"contactForm_addBtn__2TgDe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"shiftAlert_enter__9Nl2u\",\"enterActive\":\"shiftAlert_enterActive__2RunR\",\"exit\":\"shiftAlert_exit__2VEHi\",\"exitActive\":\"shiftAlert_exitActive__dosuB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"contactList_listItem__m42-4\",\"itemName\":\"contactList_itemName__38Ui_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"app_wrapper__DSRS5\",\"headerPhoneboo\":\"app_headerPhoneboo__cfUbr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"alert_box__xVE4x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"shiftAnimation_enter__2O-km\",\"enterActive\":\"shiftAnimation_enterActive__HerHh\",\"exit\":\"shiftAnimation_exit__AKuvN\",\"exitActive\":\"shiftAnimation_exitActive__2XWNr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findField\":\"filter_findField__1DBgq\",\"fade-enter\":\"filter_fade-enter__2VyH6\",\"fade-enter-active\":\"filter_fade-enter-active__1Xfl5\",\"fade-exit\":\"filter_fade-exit__20PKR\",\"fade-exit-active\":\"filter_fade-exit-active__2qwYv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"scaleAnimation_enter__3nrdq\",\"enterActive\":\"scaleAnimation_enterActive__1HrrS\",\"exit\":\"scaleAnimation_exit__2wKRn\",\"exitActive\":\"scaleAnimation_exitActive__-7ORA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"shiftAppear_appear__2mUAz\",\"appearActive\":\"shiftAppear_appearActive__3-bfF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__35lyY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalLoader\":\"ModalLoader_modalLoader__3FK2G\"};","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:2000\";\r\n\r\nconst postContacts = async (contacts) => {\r\n  try {\r\n    return await axios.post(\"/contacts\", contacts).then(({ data }) => data);\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return error;\r\n  }\r\n};\r\n\r\nconst getContacts = async () => {\r\n  try {\r\n    return await axios.get(\"/contacts\").then(({ data }) => data);\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return error;\r\n  }\r\n};\r\n\r\nconst removeContact = async (id) => {\r\n  try {\r\n    return await axios.delete(`/contacts/${id}`);\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return error;\r\n  }\r\n};\r\n\r\nexport { postContacts, getContacts, removeContact };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactRequest = createAction(\"@phBook/addRequest\");\r\nconst addContactSuccess = createAction(\"@phBook/addSuccess\");\r\nconst addContactError = createAction(\"@phBook/addErrror\");\r\n\r\nconst getContactsRequest = createAction(\"@phBook/getRequest\");\r\nconst getContactsSuccess = createAction(\"@phBook/getSuccess\");\r\nconst getContactsError = createAction(\"@phBook/getErrror\");\r\n\r\nconst removeContactRequest = createAction(\"@phBook/removeRequest\");\r\nconst removeContactSuccess = createAction(\"@phBook/removeSuccess\");\r\nconst removeContactError = createAction(\"@phBook/removeErrror\");\r\n\r\nconst setFilter = createAction(\"@phBook/setFilter\");\r\n\r\nexport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  setFilter,\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getLoading = (state) => state.loading;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getListContacts = (state) => state.contacts.items;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getListContacts, getFilter],\r\n  (listContacts, filterValue) => {\r\n    if (!!filterValue) {\r\n      return listContacts.filter((contact) =>\r\n        contact.name\r\n          .toLocaleLowerCase()\r\n          .includes(filterValue.toLocaleLowerCase())\r\n      );\r\n    } else return listContacts;\r\n  }\r\n);\r\n\r\nexport { getLoading, getFilter, getVisibleContacts, getListContacts };\r\n","import React from \"react\";\r\n\r\nimport s from \"./alert.module.css\";\r\n\r\nconst Alert = ({ text }) => {\r\n  return (\r\n    <div className={s.box}>\r\n      <h4>Warning!</h4>\r\n      <p>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Alert from \"../alert/Alert\";\r\n\r\nimport s from \"./contactForm.module.css\";\r\nimport shiftAlert from \"../animation/shiftAlert.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/operations/phBookOperations\";\r\nimport { getListContacts } from \"../../redux/contactsSelectors\";\r\n\r\nconst InitialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n  validateForm: true,\r\n  isExistContact: false,\r\n};\r\nclass ContactForm extends Component {\r\n  state = InitialState;\r\n\r\n  handleInput = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { addContact } = this.props;\r\n    const { name, number } = this.state;\r\n    const isValidateForm = this.validateForm();\r\n    if (!isValidateForm) return;\r\n    addContact({ name, number });\r\n    this.setState(InitialState);\r\n  };\r\n\r\n  onCheckUnique = (name) => {\r\n    const { listContacts } = this.props;\r\n    const isExistContact = !!listContacts.find(\r\n      (item) => item.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n    isExistContact\r\n      ? this.setState({ isExistContact: true })\r\n      : this.setState({ isExistContact: false });\r\n\r\n    return !isExistContact;\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { name, number } = this.state;\r\n    if (!name || !number) {\r\n      this.setState({ validateForm: false });\r\n      return false;\r\n    }\r\n    if (!!name && !!number) {\r\n      this.setState({ validateForm: true });\r\n    }\r\n    return this.onCheckUnique(name);\r\n  };\r\n\r\n  render() {\r\n    const { isExistContact } = this.state;\r\n    const { name, number, validateForm } = this.state;\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={isExistContact}\r\n          classNames={shiftAlert}\r\n          timeout={250}\r\n          unmountOnExit\r\n        >\r\n          <Alert text=\"Contact is already exist\" />\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={!validateForm}\r\n          classNames={shiftAlert}\r\n          timeout={250}\r\n          unmountOnExit\r\n        >\r\n          <Alert text=\"Some filed is empty\" />\r\n        </CSSTransition>\r\n        <form className={s.contactForm} onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleInput}\r\n            ></input>\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleInput}\r\n            ></input>\r\n          </label>\r\n          <button className={s.addBtn} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    listContacts: getListContacts(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import {\r\n  postContacts,\r\n  getContacts,\r\n  removeContact,\r\n} from \"../../servises/fatchToDB\";\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactError,\r\n  removeContactSuccess,\r\n  removeContactRequest,\r\n} from \"../actions/phBookActions\";\r\n\r\nconst addContact = (contacts) => (dispatch) => {\r\n  dispatch(addContactRequest());\r\n\r\n  postContacts(contacts)\r\n    .then((data) => {\r\n      dispatch(addContactSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\nconst getContactsList = () => (dispatch) => {\r\n  dispatch(getContactsRequest());\r\n\r\n  getContacts()\r\n    .then((data) => {\r\n      console.log(\"data\", data);\r\n      dispatch(getContactsSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(getContactsError(error)));\r\n};\r\n\r\nconst removeContactFromList = (id) => (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n  removeContact(id)\r\n    .then(() => {\r\n      dispatch(removeContactSuccess(id));\r\n    })\r\n    .catch((error) => dispatch(removeContactError(error)));\r\n};\r\n\r\nexport { addContact, getContactsList, removeContactFromList };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/actions/phBookActions\";\r\n\r\nimport s from \"./filter.module.css\";\r\n\r\nconst Filter = ({ filterValue, setFilter }) => {\r\n  const hendleFilter = (e) => {\r\n    const { value } = e.target;\r\n    setFilter(value);\r\n  };\r\n  return (\r\n    <form className={s.findField}>\r\n      <h3>Find contacts by name</h3>\r\n      <input value={filterValue} onChange={hendleFilter} />\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setFilter,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nimport s from \"./contactList.module.css\";\r\nimport shiftAnimation from \"../animation/shiftAnimation.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Filter from \"../filter/Filter\";\r\nimport { removeContactFromList } from \"../../redux/operations/phBookOperations\";\r\n\r\nimport scaleAnimation from \"../animation/scaleAnimation.module.css\";\r\nimport {\r\n  getFilter,\r\n  getVisibleContacts,\r\n  getListContacts,\r\n} from \"../../redux/contactsSelectors\";\r\n\r\nconst ContactList = ({\r\n  listContacts,\r\n  visibleContacts,\r\n  filter,\r\n  removeContactFromList,\r\n}) => {\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        in={listContacts.length > 1}\r\n        classNames={scaleAnimation}\r\n        timeout={250}\r\n        unmountOnExit\r\n      >\r\n        <Filter filterValue={filter} />\r\n      </CSSTransition>\r\n\r\n      <TransitionGroup component=\"ul\">\r\n        {visibleContacts.map((item) => (\r\n          <CSSTransition\r\n            classNames={shiftAnimation}\r\n            timeout={250}\r\n            key={item.id}\r\n          >\r\n            <li className={s.listItem}>\r\n              <span className={s.itemName}>{item.name}</span>{\" \"}\r\n              <span>{item.number}</span>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  removeContactFromList(item.id);\r\n                }}\r\n              >\r\n                &#215;\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(\"state\", state);\r\n  return {\r\n    listContacts: getListContacts(state),\r\n    visibleContacts: getVisibleContacts(state),\r\n    filter: getFilter(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { removeContactFromList };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport LoaderSpinner from \"react-loader-spinner\";\r\nimport Styles from \"./Loader.module.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <LoaderSpinner\r\n      className={Styles.loader}\r\n      type=\"ThreeDots\"\r\n      color=\"#3f51b5\"\r\n      height={100}\r\n      width={100}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport Loader from \"./Loader\";\r\nimport s from \"./ModalLoader.module.css\";\r\nconst ModalLoader = () => {\r\n  return (\r\n    <div className={s.modalLoader}>\r\n      <Loader />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalLoader;\r\n","import React, { useEffect } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { getContactsList } from \"../redux/operations/phBookOperations\";\r\nimport { getLoading } from \"../redux/contactsSelectors\";\r\n\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\n\r\nimport s from \"./app.module.css\";\r\n\r\nimport shiftAppear from \"./animation/shiftAppear.module.css\";\r\nimport ModalLoader from \"./loader/ModalLoader\";\r\n\r\nconst App = ({ isLoading }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContactsList());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <ModalLoader />}\r\n      <div className={s.wrapper}>\r\n        <CSSTransition\r\n          in={true}\r\n          appear\r\n          classNames={shiftAppear}\r\n          timeout={500}\r\n          unmountOnExit\r\n        >\r\n          <h1 className={s.headerPhoneboo}>Phonebook</h1>\r\n        </CSSTransition>\r\n        <ContactForm />\r\n        <ContactList />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ isLoading: getLoading(state) });\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  setFilter,\r\n} from \"../actions/phBookActions\";\r\n\r\nconst items = createReducer([], {\r\n  [addContactSuccess]: (state, action) => [action.payload, ...state],\r\n  [getContactsSuccess]: (state, action) => [...action.payload],\r\n  [removeContactSuccess]: (state, action) => [\r\n    ...state.filter((item) => item.id !== action.payload),\r\n  ],\r\n});\r\nconst filter = createReducer(\"\", {\r\n  [setFilter]: (state, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n});\r\n\r\nconst contactsReusers = combineReducers({ items, filter });\r\n\r\nexport { contactsReusers, loading };\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport thunk from \"redux-thunk\";\r\nimport { contactsReusers, loading } from \"./redusers/phBookRedusers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReusers,\r\n  loading,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [...getDefaultMiddleware(), thunk],\r\n});\r\n\r\nexport { store };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}